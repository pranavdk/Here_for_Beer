import sys
sys.path.append("/Users/udayanjoshi/opencv/build/lib")

import cv2

import numpy as np

x=raw_input("Enter image1: ")+(".jpg")
y=raw_input("Enter image2: ")+(".jpg")

img1=cv2.imread(x)
img2=cv2.imread(y)

cv2.imshow('Image1',img1)
cv2.waitKey(0)

cv2.imshow('Image2',img2)
cv2.waitKey(0)

#cv2.imshow('Image1+Image2',cv2.add(img1,img2))
#cv2.waitKey(0)

cv2.imshow('Image1-Image2',cv2.subtract(img1,img2))
cv2.waitKey(0)

#cv2.imshow('Image2-Image1',cv2.subtract(img2,img1))
#cv2.waitKey(0)

z=cv2.subtract(img1,img2)

gray=cv2.cvtColor(z, cv2.COLOR_BGR2GRAY)
image=z
output=image.copy()




circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT, 1.2, 10, np.array([]), 100, 20, 1, 50)
# ensure at least some circles were found
if circles is not None:
	# convert the (x, y) coordinates and radius of the circles to integers
	circles = np.round(circles[0, :]).astype("int")
 
	# loop over the (x, y) coordinates and radius of the circles
	for (x, y, r) in circles:
		# draw the circle in the output image, then draw a rectangle
		# corresponding to the center of the circle
		cv2.circle(output, (x, y), r, (0, 255, 0), 4)
		cv2.rectangle(output, (x - 5, y - 5), (x + 5, y + 5), (0, 128, 255), -1)
 
	# show the output image
cv2.imshow("output", np.hstack([image, output]))
cv2.waitKey(0)
cv2.destroyAllWindows()
    

